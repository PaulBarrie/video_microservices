service:
  smtp:
    build: ./Docker/Smtp
    environment: 
      MTP_HOST: ${SMTP_DOMAIN}
      MTP_USER: ${SMTP_USER}
      MTP_PASS: ${SMTP_PASSWORD}
    ports: 
      - ${SMTP_PORT}:${SMTP_PORT}
    networks: 
      - backend
    container_name: ${SMTP_CONTAINER}


    # SEARCH ENGINE SERVICES
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
      - search
    container_name: zookeeper

  kafka:
    build:
      context: ./Docker/Kafka
    ports:
     - 9092:9092
     - 9094:9094
    networks: 
      - search
    environment:
      BROKER_ID: 1
      ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: IN:PLAINTEXT,OUT:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: IN://localhost:9092, OUT://kafka:29092
      # KAFKA_LISTENERS: IN://0.0.0.0:9092, OUT://kafka:29092
      # KAFKA_INTER_BROKER_LISTENER_NAME: IN
    container_name: kafka
  
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    container_name: kakfa-manager
    restart: on-failure
    networks: 
      - search
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
      
    command: -Dpidfile.path=/dev/null

  
  connect:
    image: debezium/connect-jdbc-es:${DEBEZIUM_VERSION}
    build:
      context: ./Docker/Debezium
    depends_on: 
      - kafka
      - msql
    ports:
     - 8083:8083
    networks: 
      - search
    volumes:
      - ./Docker/Debezium/mysql-con:/user/connector/plugins/debezium-connector-mysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses

    container_name: connect